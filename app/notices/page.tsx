import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Search, Bell, Calendar, Eye, ChevronRight, AlertTriangle, Info, Megaphone, Settings } from "lucide-react"

export default function Notices() {
  const notices = [
    {
      id: 1,
      title: "üéâ myV 2.0 ÏóÖÎç∞Ïù¥Ìä∏ ÏïàÎÇ¥",
      content: "ÏÉàÎ°úÏö¥ Í∏∞Îä•Îì§Ïù¥ Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§. ÎùºÏù¥Î∏å ÏïåÎ¶º, ÏùåÏïÖ Ï∞®Ìä∏, Ïª§ÎÆ§ÎãàÌã∞ Í∏∞Îä•Ïù¥ Í∞úÏÑ†ÎêòÏóàÏäµÎãàÎã§.",
      date: "2024-06-01",
      author: "Í¥ÄÎ¶¨Ïûê",
      views: 2456,
      type: "ÏóÖÎç∞Ïù¥Ìä∏",
      priority: "high",
      isNew: true,
    },
    {
      id: 2,
      title: "üìã Ïª§ÎÆ§ÎãàÌã∞ Ïù¥Ïö© Í∑úÏπô Î≥ÄÍ≤Ω ÏïàÎÇ¥",
      content: "Í±¥Ï†ÑÌïú Ïª§ÎÆ§ÎãàÌã∞ Î¨∏Ìôî Ï°∞ÏÑ±ÏùÑ ÏúÑÌï¥ Ïù¥Ïö© Í∑úÏπôÏù¥ ÏùºÎ∂Ä Î≥ÄÍ≤ΩÎêòÏóàÏäµÎãàÎã§. ÏûêÏÑ∏Ìïú ÎÇ¥Ïö©ÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.",
      date: "2024-05-28",
      author: "Í¥ÄÎ¶¨Ïûê",
      views: 1834,
      type: "Ï†ïÏ±Ö",
      priority: "medium",
      isNew: false,
    },
    {
      id: 3,
      title: "üîß ÏÑúÎ≤Ñ Ï†êÍ≤Ä ÏïàÎÇ¥ (ÏôÑÎ£å)",
      content: "2024ÎÖÑ 5Ïõî 25Ïùº ÏÉàÎ≤Ω 2Ïãú~4Ïãú ÏÑúÎ≤Ñ Ï†êÍ≤ÄÏù¥ ÏßÑÌñâÎêòÏóàÏäµÎãàÎã§. Ïù¥Ïö©Ïóê Î∂àÌé∏ÏùÑ ÎìúÎ†§ Ï£ÑÏÜ°Ìï©ÎãàÎã§.",
      date: "2024-05-25",
      author: "Í∏∞Ïà†ÌåÄ",
      views: 1567,
      type: "Ï†êÍ≤Ä",
      priority: "medium",
      isNew: false,
    },
    {
      id: 4,
      title: "üéµ ÏùåÏïÖ Ï∞®Ìä∏ ÏãúÏä§ÌÖú Ïò§Ìîà",
      content: "Î≤ÑÌäúÎ≤ÑÎì§Ïùò ÏùåÏïÖÏùÑ Ï∞®Ìä∏Î°ú ÌôïÏù∏Ìï† Ïàò ÏûàÎäî ÏÉàÎ°úÏö¥ Í∏∞Îä•Ïù¥ Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§.",
      date: "2024-05-22",
      author: "Í∞úÎ∞úÌåÄ",
      views: 2134,
      type: "Í∏∞Îä•",
      priority: "low",
      isNew: false,
    },
    {
      id: 5,
      title: "üö® Í∞úÏù∏Ï†ïÎ≥¥ Î≥¥Ìò∏Ï†ïÏ±Ö ÏóÖÎç∞Ïù¥Ìä∏",
      content: "Í∞úÏù∏Ï†ïÎ≥¥ Î≥¥Ìò∏Ï†ïÏ±ÖÏù¥ ÏóÖÎç∞Ïù¥Ìä∏ÎêòÏóàÏäµÎãàÎã§. Î≥ÄÍ≤ΩÏÇ¨Ìï≠ÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.",
      date: "2024-05-20",
      author: "Î≤ïÎ¨¥ÌåÄ",
      views: 987,
      type: "Ï†ïÏ±Ö",
      priority: "high",
      isNew: false,
    },
    {
      id: 6,
      title: "üì± Î™®Î∞îÏùº Ïï± Î≤†ÌÉÄ ÌÖåÏä§Ìä∏ Î™®Ïßë",
      content: "myV Î™®Î∞îÏùº Ïï± Î≤†ÌÉÄ ÌÖåÏä§ÌÑ∞Î•º Î™®ÏßëÌï©ÎãàÎã§. Í¥ÄÏã¨ ÏûàÏúºÏã† Î∂ÑÎì§Ïùò ÎßéÏùÄ Ï∞∏Ïó¨ Î∂ÄÌÉÅÎìúÎ¶ΩÎãàÎã§.",
      date: "2024-05-18",
      author: "Î™®Î∞îÏùºÌåÄ",
      views: 1456,
      type: "Î™®Ïßë",
      priority: "low",
      isNew: false,
    },
    {
      id: 7,
      title: "üéä ÏÇ¨Ïù¥Ìä∏ Ïò§Ìîà 1Ï£ºÎÖÑ Í∏∞ÎÖê Ïù¥Î≤§Ìä∏",
      content: "myV ÏÇ¨Ïù¥Ìä∏ Ïò§Ìîà 1Ï£ºÎÖÑÏùÑ Í∏∞ÎÖêÌïòÏó¨ Îã§ÏñëÌïú Ïù¥Î≤§Ìä∏Î•º ÏßÑÌñâÌï©ÎãàÎã§.",
      date: "2024-05-15",
      author: "Ïù¥Î≤§Ìä∏ÌåÄ",
      views: 3245,
      type: "Ïù¥Î≤§Ìä∏",
      priority: "medium",
      isNew: false,
    },
    {
      id: 8,
      title: "üîê Î≥¥Ïïà Í∞ïÌôî ÏïàÎÇ¥",
      content: "ÏÇ¨Ïö©Ïûê Í≥ÑÏ†ï Î≥¥Ïïà Í∞ïÌôîÎ•º ÏúÑÌïú 2Îã®Í≥Ñ Ïù∏Ï¶ù Í∏∞Îä•Ïù¥ Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§.",
      date: "2024-05-12",
      author: "Î≥¥ÏïàÌåÄ",
      views: 1678,
      type: "Î≥¥Ïïà",
      priority: "high",
      isNew: false,
    },
  ]

  const categories = [
    { name: "Ï†ÑÏ≤¥", count: notices.length, color: "bg-gray-500" },
    { name: "ÏóÖÎç∞Ïù¥Ìä∏", count: notices.filter((n) => n.type === "ÏóÖÎç∞Ïù¥Ìä∏").length, color: "bg-blue-500" },
    { name: "Ï†ïÏ±Ö", count: notices.filter((n) => n.type === "Ï†ïÏ±Ö").length, color: "bg-red-500" },
    { name: "Ï†êÍ≤Ä", count: notices.filter((n) => n.type === "Ï†êÍ≤Ä").length, color: "bg-orange-500" },
    { name: "Ïù¥Î≤§Ìä∏", count: notices.filter((n) => n.type === "Ïù¥Î≤§Ìä∏").length, color: "bg-purple-500" },
    { name: "Í∏∞Îä•", count: notices.filter((n) => n.type === "Í∏∞Îä•").length, color: "bg-green-500" },
  ]

  const getPriorityIcon = (priority: string) => {
    switch (priority) {
      case "high":
        return <AlertTriangle className="w-4 h-4 text-red-400" />
      case "medium":
        return <Info className="w-4 h-4 text-yellow-400" />
      default:
        return <Bell className="w-4 h-4 text-gray-400" />
    }
  }

  const getPriorityBadge = (priority: string) => {
    switch (priority) {
      case "high":
        return <Badge className="bg-red-500 hover:bg-red-600">Ï§ëÏöî</Badge>
      case "medium":
        return <Badge className="bg-yellow-500 hover:bg-yellow-600">ÏùºÎ∞ò</Badge>
      default:
        return <Badge variant="outline">ÏïàÎÇ¥</Badge>
    }
  }

  return (
    <div className="min-h-screen bg-black text-white">
      <div className="max-w-7xl mx-auto px-6 py-12">
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-8">
          <div>
            <h1 className="text-3xl font-bold mb-2 flex items-center gap-2">
              <Megaphone className="w-8 h-8 text-purple-400" />
              Í≥µÏßÄÏÇ¨Ìï≠
            </h1>
            <p className="text-gray-400">myVÏùò ÏµúÏã† ÏÜåÏãùÍ≥º Ï§ëÏöîÌïú ÏïàÎÇ¥ÏÇ¨Ìï≠ÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî</p>
          </div>
          <div className="flex items-center gap-2 w-full md:w-auto">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4" />
              <Input
                placeholder="Í≥µÏßÄÏÇ¨Ìï≠ Í≤ÄÏÉâ"
                className="pl-10 bg-gray-800 border-gray-700 text-white placeholder-gray-400 w-full"
              />
            </div>
            <Button variant="outline" size="icon">
              <Settings className="w-4 h-4" />
            </Button>
          </div>
        </div>

        {/* Ïπ¥ÌÖåÍ≥†Î¶¨ ÌïÑÌÑ∞ */}
        <div className="flex flex-wrap gap-3 mb-8">
          {categories.map((category) => (
            <Button
              key={category.name}
              variant={category.name === "Ï†ÑÏ≤¥" ? "default" : "outline"}
              className="flex items-center gap-2"
            >
              <div className={`w-3 h-3 ${category.color} rounded-full`}></div>
              {category.name}
              <Badge variant="secondary" className="ml-1">
                {category.count}
              </Badge>
            </Button>
          ))}
        </div>

        {/* Ï§ëÏöî Í≥µÏßÄÏÇ¨Ìï≠ */}
        <div className="mb-8">
          <h2 className="text-xl font-semibold mb-4 flex items-center gap-2">
            <AlertTriangle className="w-5 h-5 text-red-400" />
            Ï§ëÏöî Í≥µÏßÄÏÇ¨Ìï≠
          </h2>
          <div className="space-y-3">
            {notices
              .filter((notice) => notice.priority === "high")
              .slice(0, 3)
              .map((notice) => (
                <Card key={notice.id} className="bg-gradient-to-r from-red-900/20 to-gray-800 border-red-500/30">
                  <CardContent className="p-4">
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <div className="flex items-center gap-2 mb-2">
                          {notice.isNew && <Badge className="bg-green-500 hover:bg-green-600 text-xs">NEW</Badge>}
                          {getPriorityBadge(notice.priority)}
                          <Badge variant="outline" className="text-xs">
                            {notice.type}
                          </Badge>
                        </div>
                        <h3 className="font-semibold text-lg mb-2 hover:text-purple-400 cursor-pointer transition-colors">
                          {notice.title}
                        </h3>
                        <p className="text-gray-300 text-sm mb-3 line-clamp-2">{notice.content}</p>
                        <div className="flex items-center gap-4 text-sm text-gray-400">
                          <div className="flex items-center gap-1">
                            <Calendar className="w-4 h-4" />
                            <span>{notice.date}</span>
                          </div>
                          <span>{notice.author}</span>
                          <div className="flex items-center gap-1">
                            <Eye className="w-4 h-4" />
                            <span>{notice.views.toLocaleString()}</span>
                          </div>
                        </div>
                      </div>
                      <Button variant="ghost" size="sm" className="ml-4">
                        <ChevronRight className="w-4 h-4" />
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
          </div>
        </div>

        {/* Ï†ÑÏ≤¥ Í≥µÏßÄÏÇ¨Ìï≠ */}
        <div>
          <h2 className="text-xl font-semibold mb-4 flex items-center gap-2">
            <Bell className="w-5 h-5 text-purple-400" />
            Ï†ÑÏ≤¥ Í≥µÏßÄÏÇ¨Ìï≠
          </h2>
          <div className="space-y-3">
            {notices.map((notice) => (
              <Card
                key={notice.id}
                className="bg-gray-800 border-gray-700 hover:bg-gray-750 transition-colors cursor-pointer"
              >
                <CardContent className="p-4">
                  <div className="flex items-start justify-between">
                    <div className="flex items-start gap-3 flex-1">
                      <div className="mt-1">{getPriorityIcon(notice.priority)}</div>
                      <div className="flex-1">
                        <div className="flex items-center gap-2 mb-2">
                          {notice.isNew && <Badge className="bg-green-500 hover:bg-green-600 text-xs">NEW</Badge>}
                          {getPriorityBadge(notice.priority)}
                          <Badge variant="outline" className="text-xs">
                            {notice.type}
                          </Badge>
                        </div>
                        <h3 className="font-semibold mb-2 hover:text-purple-400 transition-colors">{notice.title}</h3>
                        <p className="text-gray-300 text-sm mb-3 line-clamp-2">{notice.content}</p>
                        <div className="flex items-center gap-4 text-sm text-gray-400">
                          <div className="flex items-center gap-1">
                            <Calendar className="w-4 h-4" />
                            <span>{notice.date}</span>
                          </div>
                          <span>{notice.author}</span>
                          <div className="flex items-center gap-1">
                            <Eye className="w-4 h-4" />
                            <span>{notice.views.toLocaleString()}</span>
                          </div>
                        </div>
                      </div>
                    </div>
                    <Button variant="ghost" size="sm" className="ml-4">
                      <ChevronRight className="w-4 h-4" />
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* ÏïåÎ¶º ÏÑ§Ï†ï */}
        <Card className="bg-gray-800 border-gray-700 mt-8">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Bell className="w-5 h-5 text-purple-400" />
              ÏïåÎ¶º ÏÑ§Ï†ï
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-4">
                <h4 className="font-semibold">Í≥µÏßÄÏÇ¨Ìï≠ ÏïåÎ¶º</h4>
                <div className="space-y-3">
                  <label className="flex items-center gap-3 cursor-pointer">
                    <input type="checkbox" className="rounded" defaultChecked />
                    <span className="text-sm">Ï§ëÏöî Í≥µÏßÄÏÇ¨Ìï≠ ÏïåÎ¶º</span>
                  </label>
                  <label className="flex items-center gap-3 cursor-pointer">
                    <input type="checkbox" className="rounded" defaultChecked />
                    <span className="text-sm">ÏóÖÎç∞Ïù¥Ìä∏ ÏïåÎ¶º</span>
                  </label>
                  <label className="flex items-center gap-3 cursor-pointer">
                    <input type="checkbox" className="rounded" />
                    <span className="text-sm">Ïù¥Î≤§Ìä∏ ÏïåÎ¶º</span>
                  </label>
                </div>
              </div>
              <div className="space-y-4">
                <h4 className="font-semibold">ÏïåÎ¶º Î∞©Ïãù</h4>
                <div className="space-y-3">
                  <label className="flex items-center gap-3 cursor-pointer">
                    <input type="checkbox" className="rounded" defaultChecked />
                    <span className="text-sm">Î∏åÎùºÏö∞Ï†Ä ÏïåÎ¶º</span>
                  </label>
                  <label className="flex items-center gap-3 cursor-pointer">
                    <input type="checkbox" className="rounded" />
                    <span className="text-sm">Ïù¥Î©îÏùº ÏïåÎ¶º</span>
                  </label>
                  <label className="flex items-center gap-3 cursor-pointer">
                    <input type="checkbox" className="rounded" />
                    <span className="text-sm">Î™®Î∞îÏùº Ìë∏Ïãú ÏïåÎ¶º</span>
                  </label>
                </div>
              </div>
            </div>
            <div className="flex justify-end mt-6">
              <Button className="bg-purple-600 hover:bg-purple-700">ÏÑ§Ï†ï Ï†ÄÏû•</Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
